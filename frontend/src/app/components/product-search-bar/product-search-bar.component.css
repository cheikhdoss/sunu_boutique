/* Variables CSS pour la cohérence des couleurs */
:root {
  --primary-color: #1976d2;
  --border-color: #e0e0e0;
  --border-focus: #1976d2;
  --text-color: #666;
  --text-secondary: #757575;
  --text-primary: #333;
  --background: #fff;
  --shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
  --shadow-hover: 0 4px 8px rgba(0, 0, 0, 0.12);
  --placeholder-color: #9e9e9e;
}

.search-bar-container {
  display: flex;
  align-items: center;
  justify-content: space-between;
  padding: 1rem;
  background-color: var(--background);
  border-radius: 8px;
  box-shadow: var(--shadow);
  margin-bottom: 2rem;
  transition: box-shadow 0.2s ease;
}

.search-bar-container:hover {
  box-shadow: var(--shadow-hover);
}

.search-input-container {
  position: relative;
  flex: 1;
  margin-right: 2rem;
}

.search-input {
  width: 100%;
  padding: 0.75rem 2.5rem 0.75rem 1rem;
  border: 1px solid var(--border-color);
  border-radius: 4px;
  font-size: 1rem;
  outline: none;
  transition: border-color 0.2s, box-shadow 0.2s;
  color: var(--text-primary);
}

.search-input::placeholder {
  color: var(--placeholder-color);
}

.search-input:focus {
  border-color: var(--border-focus);
  box-shadow: 0 0 0 2px rgba(25, 118, 210, 0.1);
}

.search-icon {
  position: absolute;
  right: 0.75rem;
  top: 50%;
  transform: translateY(-50%);
  color: var(--text-secondary);
  pointer-events: none;
  transition: color 0.2s;
}

.search-input:focus + .search-icon {
  color: var(--primary-color);
}

.filters-container {
  display: flex;
  gap: 1rem;
  align-items: center;
}

.category-filter,
.sort-filter {
  min-width: 200px;
  transition: transform 0.2s ease;
}

.category-filter:hover,
.sort-filter:hover {
  transform: translateY(-1px);
}

label {
  display: block;
  margin-bottom: 0.5rem;
  color: var(--text-color);
  font-size: 0.875rem;
  font-weight: 500;
}

/* Personnalisation des composants Angular Material */
::ng-deep .mat-mdc-select {
  width: 100%;
}

::ng-deep .mat-mdc-select-trigger {
  min-height: 48px;
  border-radius: 4px;
}

::ng-deep .mat-mdc-select-value {
  color: var(--text-primary);
}

::ng-deep .mat-mdc-select-arrow {
  color: var(--text-secondary);
}

::ng-deep .mat-mdc-select-panel {
  border-radius: 4px;
  box-shadow: var(--shadow-hover);
}

::ng-deep .mat-mdc-option {
  transition: background-color 0.2s;
}

::ng-deep .mat-mdc-option:hover {
  background-color: rgba(25, 118, 210, 0.08);
}

::ng-deep .mat-mdc-option.mdc-list-item--selected {
  background-color: rgba(25, 118, 210, 0.12);
}

/* Responsive Design */
@media (max-width: 768px) {
  .search-bar-container {
    flex-direction: column;
    gap: 1.5rem;
    padding: 1.5rem;
  }

  .search-input-container {
    width: 100%;
    margin-right: 0;
    margin-bottom: 0.5rem;
  }

  .search-input {
    padding: 1rem 3rem 1rem 1rem;
    font-size: 1.1rem;
  }

  .filters-container {
    width: 100%;
    flex-direction: column;
    gap: 1.5rem;
  }

  .category-filter,
  .sort-filter {
    width: 100%;
    min-width: unset;
  }

  .category-filter:hover,
  .sort-filter:hover {
    transform: none; /* Désactiver l'animation hover sur mobile */
  }
}

@media (max-width: 480px) {
  .search-bar-container {
    padding: 1rem;
    margin-bottom: 1rem;
  }

  .search-input {
    font-size: 1rem;
    padding: 0.875rem 2.5rem 0.875rem 0.875rem;
  }

  label {
    font-size: 0.8rem;
  }
}

/* Animation d'apparition */
@keyframes fadeInUp {
  from {
    opacity: 0;
    transform: translateY(10px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

.search-bar-container {
  animation: fadeInUp 0.3s ease-out;
}

/* Focus states améliorés pour l'accessibilité */
.search-input:focus-visible {
  outline: 2px solid var(--primary-color);
  outline-offset: 2px;
}

::ng-deep .mat-mdc-select:focus-visible {
  outline: 2px solid var(--primary-color);
  outline-offset: 2px;
}

/* État de chargement (optionnel) */
.search-bar-container.loading {
  opacity: 0.7;
  pointer-events: none;
}

.search-bar-container.loading::after {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: linear-gradient(90deg, transparent, rgba(255,255,255,0.4), transparent);
  animation: loading 1.5s infinite;
}

@keyframes loading {
  0% {
    transform: translateX(-100%);
  }
  100% {
    transform: translateX(100%);
  }
}
